{"version":3,"sources":["components/todoContext/TodoContext.js","lib/useLocalStorage.js","components/todoCounter/TodoCounter.jsx","components/todoSearch/TodoSearch.jsx","components/todoList/TodoList.jsx","components/todoItem/TodoItem.jsx","components/createTodoButton/CreateTodoButton.jsx","components/modal/Modal.jsx","components/todoForm/TodoForm.jsx","components/todoError/TodoError.jsx","components/todoEmpty/TodoEmpty.jsx","components/todoLoading/TodoLoading.jsx","App.js","index.js"],"names":["TodoContext","createContext","TodoProvider","children","itemName","initialValue","useState","loading","setLoading","error","setError","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","console","saveItem","newItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","text","toLowerCase","includes","Provider","value","handleCompleted","id","todoIndex","findIndex","newTodos","handleDelete","splice","handleAdd","push","TodoCounter","useContext","total","className","TodoSearch","type","placeholder","onChange","event","target","TodoList","TodoItem","handleComplete","onClick","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","setText","onSubmit","preventDefault","prev","cols","rows","TodoError","TodoEmpty","TodoLoading","App","map","render"],"mappings":"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","file":"static/js/main.ea748d74.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\nimport { useLocalStorage } from '../../lib/useLocalStorage'\r\n\r\nconst TODO_VERSION = 'TODOS_V1'\r\nconst TodoContext = createContext() // * For create a context\r\n\r\nfunction TodoProvider({ children }) {\r\n  const { item: todos, saveItem: saveTodos, loading, error } = useLocalStorage(TODO_VERSION, []) // * Custom Hook\r\n  const [searchValue, setSearchValue] = useState('')\r\n  const [openModal, setOpenModal] = useState(false)\r\n\r\n  const completedTodos = todos.filter((todo) => !!todo.completed).length // * Shortcut for conditional true\r\n  const totalTodos = todos.length\r\n\r\n  let searchedTodos = []\r\n  if (searchValue < 1) {\r\n    searchedTodos = todos\r\n  } else {\r\n    searchedTodos = todos.filter((todo) => todo.text.toLowerCase().includes(searchValue.toLowerCase()))\r\n  }\r\n\r\n  const handleCompleted = (id) => {\r\n    const todoIndex = todos.findIndex((todo) => todo.id === id)\r\n    const newTodos = [...todos]\r\n    newTodos[todoIndex].completed = !newTodos[todoIndex].completed\r\n    saveTodos(newTodos)\r\n  }\r\n\r\n  const handleDelete = (id) => {\r\n    const todoIndex = todos.findIndex((todo) => todo.id === id)\r\n    const newTodos = [...todos]\r\n    newTodos.splice(todoIndex, 1)\r\n    saveTodos(newTodos)\r\n  }\r\n\r\n  const handleAdd = (text) => {\r\n    const newTodos = [...todos]\r\n    newTodos.push({\r\n      id: totalTodos + 1,\r\n      completed: false,\r\n      text,\r\n    })\r\n    saveTodos(newTodos)\r\n  }\r\n\r\n  // * The values are the states that we want to share in our application\r\n  return (\r\n    <TodoContext.Provider\r\n      value={{ loading, error, totalTodos, completedTodos, searchValue, setSearchValue, searchedTodos, handleCompleted, handleDelete, openModal, setOpenModal, handleAdd }}>\r\n      {children}\r\n    </TodoContext.Provider>\r\n  )\r\n}\r\n\r\nexport { TodoProvider, TodoContext }\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst useLocalStorage = (itemName, initialValue) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(false)\r\n  const [item, setItem] = useState(initialValue)\r\n\r\n  // * We simulate an API call\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      try {\r\n        const localStorageItem = localStorage.getItem(itemName)\r\n        let parsedItem\r\n\r\n        if (!localStorageItem) {\r\n          localStorage.setItem(itemName, JSON.stringify(initialValue))\r\n          parsedItem = initialValue\r\n        } else {\r\n          parsedItem = JSON.parse(localStorageItem)\r\n        }\r\n\r\n        setItem(parsedItem)\r\n        setLoading(false)\r\n      } catch (error) {\r\n        setError(true)\r\n        console.error(error)\r\n      }\r\n    }, 2000)\r\n  })\r\n\r\n  const saveItem = (newItem) => {\r\n    try {\r\n      localStorage.setItem(itemName, JSON.stringify(newItem))\r\n      setItem(newItem)\r\n    } catch (error) {\r\n      setError(true)\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  return {\r\n    item,\r\n    saveItem,\r\n    loading,\r\n    error,\r\n  }\r\n}\r\n\r\nexport { useLocalStorage }\r\n","import React, { useContext } from 'react'\r\nimport { TodoContext } from '..'\r\nimport './TodoCounter.css'\r\n\r\nconst TodoCounter = () => {\r\n  const { totalTodos: total, completedTodos: completed } = useContext(TodoContext)\r\n\r\n  return (\r\n    <h2 className='Title'>\r\n      You completed {completed} of {total} TODO's\r\n    </h2>\r\n  )\r\n}\r\n\r\nexport { TodoCounter }\r\n","import React, { useContext } from 'react'\r\nimport { TodoContext } from '..'\r\nimport './TodoSearch.css'\r\n\r\nconst TodoSearch = () => {\r\n  const { searchValue, setSearchValue } = useContext(TodoContext)\r\n\r\n  const handleValueChange = (event) => {\r\n    setSearchValue(event.target.value)\r\n  }\r\n\r\n  return <input className='Search' type='text' placeholder='Search your TODO' value={searchValue} onChange={handleValueChange} />\r\n}\r\n\r\nexport { TodoSearch }\r\n","import React from 'react'\r\nimport './TodoList.css'\r\n\r\nconst TodoList = ({ children }) => {\r\n  return (\r\n    <section className='Container-list'>\r\n      <ul className='Container-list__menu'>{children}</ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport { TodoList }\r\n","import React from 'react'\r\nimport './TodoItem.css'\r\nimport { IoCheckmarkSharp, IoCloseSharp } from 'react-icons/io5'\r\n\r\nconst TodoItem = ({ text, completed, handleComplete, handleDelete }) => {\r\n  return (\r\n    <li className={`Item ${completed && 'completed'}`}>\r\n      <div className='Item__button Item__button--check' onClick={handleComplete}>\r\n        <IoCheckmarkSharp />\r\n      </div>\r\n      <p className='Item__description'>{text}</p>\r\n      <div className='Item__button Item__button--close' onClick={handleDelete}>\r\n        <IoCloseSharp />\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport { TodoItem }\r\n","import React, { useContext } from 'react'\r\nimport { AiOutlinePlus } from 'react-icons/ai'\r\nimport { TodoContext } from '..'\r\nimport './CreateTodoButton.css'\r\n\r\nconst CreateTodoButton = () => {\r\n  const { openModal, setOpenModal } = useContext(TodoContext)\r\n\r\n  const handleClick = () => {\r\n    // * All the states has this variables for make process with our previous state without using the variable name\r\n    setOpenModal((prevState) => !prevState)\r\n  }\r\n\r\n  return (\r\n    <button className={`CreateTodoButton ${!!openModal && 'Close'}`} onClick={handleClick}>\r\n      <AiOutlinePlus />\r\n    </button>\r\n  )\r\n}\r\n\r\nexport { CreateTodoButton }\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './Modal.css'\r\n\r\nconst Modal = ({ children }) => {\r\n  return ReactDOM.createPortal(<div className='Modal'>{children}</div>, document.getElementById('modal'))\r\n}\r\n\r\nexport { Modal }\r\n","import React, { useContext, useState } from 'react'\r\nimport './TodoForm.css'\r\nimport { TodoContext } from '../'\r\n\r\nconst TodoForm = () => {\r\n  const [text, setText] = useState('')\r\n  const { handleAdd, setOpenModal } = useContext(TodoContext)\r\n\r\n  const handleCancel = () => {\r\n    setOpenModal((prev) => !prev)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    handleAdd(text)\r\n    setOpenModal((prev) => !prev)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className='Form'>\r\n      <label className='Form__label'>Add a new TODO</label>\r\n      <textarea cols='30' rows='5' placeholder='Type something...' value={text} onChange={(event) => setText(event.target.value)} className='Form__text-area' />\r\n      <div className='Form__buttons-container'>\r\n        <button type='button' onClick={handleCancel} className='Form__button Form__button--cancel'>\r\n          Cancel\r\n        </button>\r\n        <button type='submit' className='Form__button Form__button--add'>\r\n          Add\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport { TodoForm }\r\n","import React from 'react'\r\nimport './TodoError.css'\r\n\r\nconst TodoError = () => {\r\n  return <p className='TodoError'>An error occurred</p>\r\n}\r\n\r\nexport { TodoError }\r\n","import React from 'react'\r\nimport './TodoEmpty.css'\r\n\r\nconst TodoEmpty = () => {\r\n  return <p className='TodoEmpty'>Create your first TODO !</p>\r\n}\r\n\r\nexport { TodoEmpty }\r\n","import React from 'react'\r\nimport './TodoLoading.css'\r\n\r\nconst TodoLoading = () => {\r\n  return (\r\n    <div className='TodoLoading__Container'>\r\n      <span className='TodoLoading__Button'></span>\r\n      <p className='TodoLoading__Text'>Loading...</p>\r\n      <span className='TodoLoading__Button'></span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { TodoLoading }\r\n","import React, { useContext } from 'react'\r\nimport { TodoCounter, TodoSearch, TodoList, TodoItem, CreateTodoButton, TodoContext, Modal, TodoForm, TodoError, TodoLoading, TodoEmpty } from './components'\r\n\r\nfunction App() {\r\n  const { error, loading, searchedTodos, handleCompleted, handleDelete, openModal, setOpenModal } = useContext(TodoContext)\r\n\r\n  return (\r\n    <>\r\n      <TodoCounter />\r\n      <TodoSearch />\r\n      <TodoList>\r\n        {error && <TodoError />}\r\n        {loading && <TodoLoading />}\r\n        {!loading && !searchedTodos.length && <TodoEmpty />}\r\n        {searchedTodos.map((todo) => (\r\n          <TodoItem key={todo.id} text={todo.text} completed={todo.completed} handleComplete={() => handleCompleted(todo.id)} handleDelete={() => handleDelete(todo.id)} />\r\n        ))}\r\n      </TodoList>\r\n      {!!openModal && (\r\n        <Modal>\r\n          <TodoForm />\r\n        </Modal>\r\n      )}\r\n      <CreateTodoButton />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { TodoProvider } from './components'\r\n\r\nReactDOM.render(\r\n  <TodoProvider>\r\n    <App />\r\n  </TodoProvider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}